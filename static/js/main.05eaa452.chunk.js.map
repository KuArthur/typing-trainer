{"version":3,"sources":["Components/Text/Text.js","Components/Accuracy/Accuracy.js","App.js","reportWebVitals.js","index.js"],"names":["Text","text","activeIndex","hasError","className","split","map","letter","i","index","cn","Accuracy","errors","useState","accuracy","setAccurancy","useEffect","newAccurancy","Math","floor","length","App","setText","setActiveIndex","setError","setErrors","a","fetch","response","json","join","fetchGetText","updateIndex","fn","ref","React","useRef","current","useCallback","useEventCallback","newIndex","console","log","onKeypress","e","String","fromCharCode","charCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iUA+BeA,EAzBF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAU/B,OAAKF,EAGD,qBAAKG,UAAY,OAAjB,SAEIH,EACCI,MAAM,IACNC,KAAI,SAACC,EAAQC,GAAT,OAAe,sBAAcJ,WAfdK,EAe8CD,EAdlEC,IAAUP,EACHQ,IAAG,UAAWP,EAAW,MAAQ,UAGrCO,IAAG,UAAWD,EAAQP,EAAc,QAAU,SAU7B,SAAmDK,GAAxCC,GAfZ,IAACC,OAQV,MCOPE,G,MAnBE,SAAC,GAAiC,IAAhCV,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaU,EAAY,EAAZA,OAAY,EACdC,mBAAS,KADK,mBACvCC,EADuC,KAC9BC,EAD8B,KAW9C,OARAC,qBAAU,WACN,GAAGJ,EAAQ,CACP,IAAIK,EAAeC,KAAKC,OAAOlB,EAAKI,MAAM,IAAIe,OAASR,IAAmC,IAAxBX,EAAKI,MAAM,IAAIe,QAAiB,KAAO,IACzGL,EAAaE,MAGjB,CAACf,IAGD,sBAAKE,UAAY,WAAjB,UACI,oFACA,iCAAOU,EAAP,a,MCkEGO,MAlEf,WAAgB,IAAD,EAEUR,mBAAS,IAFnB,mBAENZ,EAFM,KAEDqB,EAFC,OAGyBT,mBAAS,GAHlC,mBAGNX,EAHM,KAGOqB,EAHP,OAIgBV,oBAAS,GAJzB,mBAINV,EAJM,KAIIqB,EAJJ,OAKeX,mBAAS,GALxB,mBAKND,EALM,KAKEa,EALF,KAObT,qBAAU,YACU,uCAAG,8BAAAU,EAAA,sEACIC,MAAM,wEADV,cACbC,EADa,gBAEAA,EAASC,OAFT,OAEb5B,EAFa,OAInBqB,EAAQrB,EAAK6B,KAAK,KAJC,2CAAH,qDAOlBC,KAEA,IAEFf,qBAAU,WACRO,EAAe,GACfC,GAAS,KACR,CAACvB,IAEN,IAAM+B,EAlCmB,SAACC,GACxB,IAAMC,EAAMC,IAAMC,OAAOH,GAMzB,OAJAjB,qBAAU,WACRkB,EAAIG,QAAUJ,IACb,CAACA,IAEGE,IAAMG,aAAY,kBAAaJ,EAAIG,QAAJ,MAAAH,EAAG,aAAmB,IA2B1CK,EAAiB,SAAChC,GACpCiB,GAAS,GACT,IAAMgB,EAAWtC,EAAc,EAG7B,GADAuC,QAAQC,IAAI,CAACF,WAAUtC,kBACnBsC,GAAYvC,EAAKmB,QAArB,CAOA,GAFsBnB,EAAKC,KAELK,EAGlB,OAFAiB,GAAS,QACTC,EAAUb,EAAS,GAIvBW,EAAeiB,OAajB,OAVAxB,qBAAU,WACR,IAAM2B,EAAa,SAAAC,GACfH,QAAQC,IAAIE,GACZZ,EAAYa,OAAOC,aAAaF,EAAEG,YAItC,OAFAC,SAASC,iBAAiB,WAAYN,GAE/B,kBAAMK,SAASE,oBAAoB,WAAYP,MACrD,CAACX,IAGF,sBAAK5B,UAAY,MAAjB,UACE,qBAAKA,UAAY,gBAAjB,SACE,cAAC,EAAD,CAAMH,KAAQA,EAAMC,YAAeA,EAAaC,SAAYA,MAE9D,cAAC,EAAD,CAAUF,KAAQA,EAAMC,YAAeA,EAAaU,OAAUA,QClErDuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BZ,M","file":"static/js/main.05eaa452.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\n\r\nimport './Text.scss';\r\n\r\nimport cn from 'classnames';\r\n\r\nconst Text = ({ text, activeIndex, hasError }) => {\r\n    \r\n    const getLetterClassName = (index) => {\r\n        if (index === activeIndex) {\r\n            return cn('default', hasError ? 'red' : 'yellow');\r\n        } \r\n\r\n        return cn('default', index < activeIndex ? 'green' : 'blue');\r\n    }\r\n\r\n    if (!text) return null;\r\n\r\n    return (\r\n        <div className = 'Text' >\r\n            {\r\n            text\r\n            .split('')\r\n            .map((letter, i) => <span key={i} className = {getLetterClassName(i)}>{letter}</span>\r\n            )}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Text;","import {React, useState,useEffect,useCallback,useRef} from 'react';\r\n\r\nimport './Accuracy.scss';\r\n\r\nconst Accuracy = ({text, activeIndex, errors}) => {\r\n    const [accuracy,setAccurancy] = useState(100);\r\n    \r\n    useEffect(() => {\r\n        if(errors) {\r\n            let newAccurancy = Math.floor((text.split('').length - errors) / (text.split('').length * 0.01) * 100) / 100;\r\n            setAccurancy(newAccurancy);\r\n        }\r\n          \r\n      },[activeIndex])\r\n\r\n    return (\r\n        <div className = 'Accuracy'>\r\n            <span>Точность</span>\r\n            <span>{accuracy} %</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accuracy;","import React, {useEffect,useState} from 'react';\n\nimport './App.scss';\n\nimport Text from './Components/Text/Text';\nimport Accuracy from './Components/Accuracy/Accuracy'\nimport { act } from 'react-dom/test-utils';\n\nconst useEventCallback = (fn) => {\n  const ref = React.useRef(fn);\n\n  useEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n\n  return React.useCallback((...args) => ref.current(...args), []);\n}\n\nfunction App() {\n  \n  const [text,setText] = useState('');\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [hasError, setError] = useState(false);\n  const [errors, setErrors] = useState(0)\n\n  useEffect(() => {\n    const fetchGetText = async () => {\n      const response = await fetch('https://baconipsum.com/api/?type=all-meat&paras=2&start-with-lorem=1')\n      const text = await response.json()\n\n      setText(text.join(''));\n    }\n\n    fetchGetText()\n    \n  },[])\n\n  useEffect(() => {\n    setActiveIndex(0);\n    setError(false);\n  }, [text])\n\nconst updateIndex = useEventCallback((letter) => {\n  setError(false);\n  const newIndex = activeIndex + 1;\n\n    console.log({newIndex, activeIndex})\n    if (newIndex >= text.length) {\n        // Все написано\n        return;\n    }\n\n    const currentLetter = text[activeIndex];\n\n    if (currentLetter !== letter) {\n        setError(true);\n        setErrors(errors + 1);\n        return;\n    }\n  \n    setActiveIndex(newIndex)\n  });\n\n  useEffect(() => {\n    const onKeypress = e => {\n        console.log(e);\n        updateIndex(String.fromCharCode(e.charCode));\n    }\n    document.addEventListener('keypress', onKeypress);\n\n    return () => document.removeEventListener('keypress', onKeypress);\n  }, [updateIndex]);\n\n  return (\n    <div className = 'App'>\n      <div className = 'TypingTrainer'>\n        <Text text = {text} activeIndex = {activeIndex} hasError = {hasError} />\n      </div>\n      <Accuracy text = {text} activeIndex = {activeIndex} errors = {errors} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}